Approach-1(Brute Force)
------------------------
public static int maxConsecutiveOnes(int N) {
        
        // Your code here
        int count=0;
        int res=0;
        while(N>0)
        {
            if(N%2==1)
            {
                count++;
            }
            else
            {
                res=Math.max(res,count);
                count=0;
            }
            N/=2;
        }
        res=Math.max(res,count);
        return res;
    }
    
Time Complexity : Theta(log(n))
Space Complexity : O(1)

Approach-2(Efficient Approach)
-------------------------------
public static int maxConsecutiveOnes(int N) {
        
        // Your code here
        int count=0;
        while(N>0)
        {
            N=N&(N>>1);
            count++;
        }
        return count;
    }
    
Time Complexity : O(log(d)) where d=largest count of consecutive 1's
Space Complexity : O(1)
